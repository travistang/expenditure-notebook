{"version":3,"sources":["components/AmountInput.tsx","pageList.ts","backend/types.ts","backend/ls.ts","contexts/LocalStorageContext.tsx","components/Modal.tsx","components/ClipboardModal.tsx","components/Header.tsx","components/Input.tsx","components/SubmitButton.tsx","components/MultipleSelect/SelectedOptionChip.tsx","components/MultipleSelect/index.tsx","pages/RecordListPage.tsx","components/UploadModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AmountInput","value","onChange","inputRef","React","useRef","valueString","toFixed","screenWidth","window","screen","width","ref","style","fontSize","length","className","type","onKeyDown","e","key","keyAsDigit","parseInt","Number","isNaN","Math","floor","PageList","DEFAULT_DB_VALUE","expenditures","LS_STORAGE_KEY","LocalStorageContext","createContext","store","addExpenditure","_","LocalStorageContextProvider","children","db","data","JSON","parse","localStorage","getItem","split","reduce","result","keyPart","getData","useState","setStore","useEffect","setItem","stringify","contextValue","expenditure","Provider","Modal","title","opened","onClose","onClick","stopPropagation","classnames","ClipboardModal","useContext","id","contentEditable","copy","toast","success","icon","faClipboard","Header","currentPage","goPage","goingPage","HOME_PAGE","RECORD_LIST_PAGE","goingPageIcon","faHome","faList","clipboardModalOpen","setClipboardModalOpen","Input","name","label","htmlFor","target","SubmitButton","onOpenUploadModal","onSubmit","faPen","faQrcode","SelectedOptionChip","text","onDelete","faTimes","MultipleSelect","values","selectableOptions","editingValue","setEditingValue","onAddOption","selectedOption","finalAddingOption","find","opt","toLowerCase","onRemove","option","filter","displayingSelectableOptions","includes","sort","slice","map","RecordListPage","expenditureList","a","b","Date","date","getTime","now","oneMonthAgo","subMonths","expenditureOfTheMonth","record","isSameMonth","total","amount","expenditureDifferences","classNames","format","description","UploadModal","onQRDetected","decodedData","url","Error","fetch","method","body","response","json","console","log","error","message","onError","onScan","defaultFormValue","labels","App","page","setPage","formValue","setFormValue","uploadFormModalOpened","setUploadFormOpened","labelsAddedInStore","Array","from","Set","newValue","desc","random","toString","AppWithContexts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b92e690.chunk.js","sourcesContent":["import React, { KeyboardEventHandler } from \"react\";\n\ntype Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\nexport default function AmountInput({ value, onChange }: Props) {\n  const inputRef = React.useRef(null);\n\n  const valueString = `${(value / 100).toFixed(2)}€`;\n\n  const screenWidth = window.screen.width;\n  const onInput: KeyboardEventHandler = (e) => {\n    const key = e.key;\n    const keyAsDigit = parseInt(key);\n    if (!Number.isNaN(keyAsDigit)) {\n      onChange(value * 10 + keyAsDigit);\n    }\n\n    if (key === \"Backspace\") {\n      onChange(Math.floor(value / 10));\n    }\n  };\n  return (\n    <input\n      ref={inputRef}\n      style={{ fontSize: (1.5 * screenWidth) / valueString.length }}\n      className=\"digit center text-color-100 bg-primary-500 text-center\"\n      value={valueString}\n      type=\"tel\"\n      onKeyDown={onInput}\n    ></input>\n  );\n}\n","export enum PageList {\n  HOME_PAGE,\n  RECORD_LIST_PAGE,\n}\n","export type Expenditure = {\n  description: string;\n  date: Date;\n  amount: number;\n  labels: string[];\n  id: string;\n};\n\nexport type DB = {\n  expenditures: Expenditure[];\n};\n\nexport const DEFAULT_DB_VALUE: DB = {\n  expenditures: [],\n};\n","import { DB, DEFAULT_DB_VALUE } from \"./types\";\n\nconst LS_STORAGE_KEY = \"ls/expenditure\";\n\nexport const saveData = (data: object) => {\n  localStorage.setItem(LS_STORAGE_KEY, JSON.stringify(data));\n};\n\nexport const getData = <T>(key?: string): T | null => {\n  try {\n    const data: DB =\n      JSON.parse(localStorage.getItem(LS_STORAGE_KEY) || \"\") ||\n      DEFAULT_DB_VALUE;\n    return key\n      ? key.split(\".\").reduce<any>((result, keyPart) => result?.[keyPart], data)\n      : data;\n  } catch {\n    return null;\n  }\n};\n","import React from \"react\";\nimport { getData, saveData } from \"../backend/ls\";\nimport { DB, DEFAULT_DB_VALUE, Expenditure } from \"../backend/types\";\n\nexport type LocalStorageContextType = {\n  store: DB;\n  addExpenditure: (expenditure: Expenditure) => void;\n};\nexport const LocalStorageContext = React.createContext<LocalStorageContextType>(\n  { store: DEFAULT_DB_VALUE, addExpenditure: (_) => {} }\n);\n\ntype Props = {\n  children: React.ReactNode;\n};\nexport default function LocalStorageContextProvider({ children }: Props) {\n  const db: DB = getData() || { expenditures: [] };\n  const [store, setStore] = React.useState<DB>(db);\n\n  React.useEffect(() => {\n    if (store) {\n      saveData(store);\n    }\n  }, [store]);\n  const addExpenditure = (expenditure: Expenditure) => {\n    setStore({\n      ...store,\n      expenditures: [...store.expenditures, expenditure],\n    });\n  };\n\n  const contextValue = {\n    store,\n    addExpenditure,\n  };\n  return (\n    <LocalStorageContext.Provider value={contextValue}>\n      {children}\n    </LocalStorageContext.Provider>\n  );\n}\n","import classnames from \"classnames\";\n\nexport type ModalControlProps = {\n  opened: boolean;\n  onClose: () => void;\n};\ntype Props = ModalControlProps & {\n  title: string;\n  className?: string;\n  children: React.ReactNode;\n};\nexport default function Modal({\n  children,\n  title,\n  opened,\n  onClose,\n  className,\n}: Props) {\n  if (!opened) {\n    return null;\n  }\n  return (\n    <div\n      className=\"fixed z-10 inset-0 p-4 center bg-color-700 bg-opacity-60\"\n      onClick={onClose}\n    >\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className={classnames(\n          \"rounded-lg w-full bg-primary-300 text-color-100 vertical overflow-y-scroll\",\n          className || \"h-2/3 p-2\"\n        )}\n      >\n        <span className=\"uppercase font-bold text-md text-color-100 mb-2\">\n          {title}\n        </span>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport copy from \"copy-to-clipboard\";\n\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport toast from \"react-hot-toast\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport Modal, { ModalControlProps } from \"./Modal\";\n\ntype Props = ModalControlProps;\n\nexport default function ClipboardModal({ opened, onClose }: Props) {\n  const { store } = React.useContext(LocalStorageContext);\n  const copyToClipboard = () => {\n    copy(JSON.stringify(store));\n    toast.success(\"Copied store value to clipboard!\");\n  };\n  return (\n    <Modal\n      title=\"Copy store content to clipboard\"\n      opened={opened}\n      onClose={onClose}\n    >\n      <textarea\n        id=\"store-text\"\n        className=\"shadow-inner rounded-lg bg-primary-500 code digit flex-1 resize-none\"\n        value={JSON.stringify(store)}\n        contentEditable={false}\n      />\n      <div className=\"h-16 py-2 flex items-center justify-end\">\n        <button\n          type=\"button\"\n          onClick={copyToClipboard}\n          className=\"rounded-lg bg-secondary-500 gap-2 flex items-center p-2 h-full hover:bg-secondary-600\"\n        >\n          <FontAwesomeIcon icon={faClipboard} />\n          Copy to clipboard\n        </button>\n      </div>\n    </Modal>\n  );\n}\n","import { faClipboard, faHome, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { PageList } from \"../pageList\";\nimport ClipboardModal from \"./ClipboardModal\";\n\ntype Props = {\n  currentPage: PageList;\n  goPage: (page: PageList) => void;\n};\nexport default function Header({ currentPage, goPage }: Props) {\n  const goingPage =\n    currentPage === PageList.HOME_PAGE\n      ? PageList.RECORD_LIST_PAGE\n      : PageList.HOME_PAGE;\n  const goingPageIcon = goingPage === PageList.HOME_PAGE ? faHome : faList;\n  const go = () => goPage(goingPage);\n\n  const [clipboardModalOpen, setClipboardModalOpen] = React.useState(false);\n\n  return (\n    <>\n      <header className=\"h-16 flex-0 center relative\">\n        <span className=\"uppercase text-lg\">Expenditure logbook</span>\n        <div className=\"absolute right-0 top-0 h-full horizontal-center gap-4 text-xl\">\n          <FontAwesomeIcon\n            icon={faClipboard}\n            className=\"cursor-pointer\"\n            onClick={() => setClipboardModalOpen(true)}\n          />\n          <FontAwesomeIcon\n            icon={goingPageIcon}\n            onClick={go}\n            className=\"cursor-pointer\"\n          />\n        </div>\n      </header>\n      <ClipboardModal\n        opened={clipboardModalOpen}\n        onClose={() => setClipboardModalOpen(false)}\n      />\n    </>\n  );\n}\n","import classnames from \"classnames\";\n\ntype Props = {\n  children?: React.ReactNode;\n  value: string;\n  name: string;\n  label: string;\n  className?: string;\n  onChange: (value: string) => void;\n};\nexport default function Input({\n  children,\n  className,\n  name,\n  label,\n  value,\n  onChange,\n}: Props) {\n  return (\n    <div className=\"vertical gap-1\">\n      <label htmlFor={name}>{label}</label>\n      <div\n        className={classnames(\n          \"rounded-lg bg-primary-200 p-4 horizontal\",\n          className\n        )}\n      >\n        {children}\n        <input\n          className=\"bg-primary-200 w-full outline-none text-2xl\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faQrcode } from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n  onSubmit: () => void;\n  onOpenUploadModal: () => void;\n};\nexport default function SubmitButton({ onOpenUploadModal, onSubmit }: Props) {\n  return (\n    <div className=\"h-1/6 md:h-1/3 center w-full relative\">\n      <button\n        onClick={onSubmit}\n        className=\"h-20 w-20 md:h-96 md:w-96 rounded-full bg-secondary-500 text-xl md:text-7xl\"\n      >\n        <FontAwesomeIcon icon={faPen} />\n      </button>\n      <div className=\"absolute right-0 top-0 h-full horizontal-center gap-2\">\n        <button\n          onClick={onOpenUploadModal}\n          className=\"text-3xl md:text-7xl rounded-full center h-12 w-12 bg-color-50 text-primary-500\"\n        >\n          <FontAwesomeIcon icon={faQrcode} className=\"text-primary-500\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype Props = {\n  text: string;\n  onDelete: () => void;\n};\n\nexport default function SelectedOptionChip({ text, onDelete }: Props) {\n  return (\n    <div\n      onClick={onDelete}\n      className=\"horizontal-center px-2 py-1 rounded-md bg-primary-100 text-sm text-color-100\"\n    >\n      <span className=\"pr-1\">{text}</span>\n      <FontAwesomeIcon icon={faTimes} className=\"pl-1 w-8 h-8\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport SelectedOptionChip from \"./SelectedOptionChip\";\n\ntype Props = {\n  values: string[];\n  name: string;\n  label: string;\n  onChange: (values: string[]) => void;\n  selectableOptions?: string[];\n};\nexport default function MultipleSelect({\n  name,\n  label,\n  values,\n  onChange,\n  selectableOptions = [],\n}: Props) {\n  const [editingValue, setEditingValue] = React.useState(\"\");\n\n  const onAddOption = (selectedOption?: string) => {\n    const finalAddingOption = selectedOption || editingValue;\n    if (!finalAddingOption) {\n      return;\n    }\n    const hasExistingOptionMatchingInput = values.find(\n      (opt) => opt.toLowerCase() === finalAddingOption.toLowerCase()\n    );\n    if (hasExistingOptionMatchingInput) {\n      return;\n    }\n    onChange([...values, finalAddingOption]);\n    setEditingValue(\"\");\n  };\n\n  const onRemove = (option: string) => () => {\n    onChange(values.filter((opt) => opt !== option));\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      onAddOption();\n    }\n\n    if (\n      e.key === \"Backspace\" &&\n      editingValue.length === 0 &&\n      values.length > 0\n    ) {\n      onRemove(values[values.length - 1])();\n    }\n  };\n\n  const displayingSelectableOptions =\n    editingValue.length < 2\n      ? []\n      : selectableOptions\n          .filter(\n            (opt) =>\n              opt.toLowerCase().includes(editingValue.toLowerCase()) &&\n              !values.find((value) => value.toLowerCase() === opt.toLowerCase())\n          )\n          .sort()\n          .slice(0, 5);\n  return (\n    <div className=\"vertical gap-1\">\n      <label htmlFor={name}>{label}</label>\n      <div\n        className={classnames(\n          \"relative rounded-lg bg-primary-200 p-4 horizontal\",\n          \"gap-2\"\n        )}\n      >\n        {values.map((value) => (\n          <SelectedOptionChip\n            text={value}\n            key={value}\n            onDelete={onRemove(value)}\n          />\n        ))}\n        <input\n          onKeyDown={onKeyDown}\n          className=\"bg-primary-200 w-full outline-none text-2xl\"\n          value={editingValue}\n          onChange={(e) => setEditingValue(e.target.value)}\n        />\n        {displayingSelectableOptions && (\n          <div className=\"absolute min-h-20 bg-primary-200 rounded-lg left-0 right-0 top-full mt-2 overflow-y-scroll\">\n            {displayingSelectableOptions.map((opt) => (\n              <div\n                key={opt}\n                onClick={() => onAddOption(opt)}\n                className=\"cursor-pointer px-2 h-12 whitespace-nowrap overflow-ellipsis horizontal-center hover:bg-primary-700\"\n              >\n                {opt}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { format, isSameMonth, subMonths } from \"date-fns\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport classNames from \"classnames\";\n\nexport default function RecordListPage() {\n  const { store } = React.useContext(LocalStorageContext);\n  const expenditureList = store?.expenditures?.sort(\n    (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()\n  );\n  const now = new Date();\n  const oneMonthAgo = subMonths(now, 1);\n  const expenditureOfTheMonth =\n    store.expenditures\n      ?.filter((record) => isSameMonth(now, new Date(record.date)))\n      .reduce((total, record) => total + record.amount, 0) ?? 0;\n  const expenditureOfLastMonth =\n    store.expenditures\n      ?.filter((record) => isSameMonth(oneMonthAgo, new Date(record.date)))\n      .reduce((total, record) => total + record.amount, 0) ?? 0;\n  const expenditureDifferences = expenditureOfTheMonth - expenditureOfLastMonth;\n  return (\n    <div className=\"vertical flex-1 overflow-y-scroll\">\n      <div className=\"sticky top-0 h-16 flex-shrink-0 bg-primary-500 flex items-center justify-between\">\n        <div className=\"text-sm uppercase vertical text-green-500 font-bold\">\n          <span>Current month</span>\n          <b className=\"text-3xl text-green-400\">\n            {expenditureOfTheMonth.toFixed(2)}€\n          </b>\n        </div>\n        <div\n          className={classNames(\n            \"text-sm\",\n            expenditureDifferences <= 0 ? \"text-green-500\" : \"text-red-500\"\n          )}\n        >\n          {expenditureDifferences <= 0 ? \"-\" : \"+\"}\n          {expenditureDifferences.toFixed(2)}€\n        </div>\n      </div>\n      {expenditureList?.map((record) => (\n        <div className=\"flex-shrink-0 items-center grid grid-cols-12 h-16 border-t border-b border-primary-200\">\n          <span className=\"col-span-3\">\n            {format(new Date(record.date), \"yyyy-MM-dd HH:mm\")}\n          </span>\n          <span className=\"col-span-6 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            {record.description}\n          </span>\n          <span className=\"col-span-3 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            {record.amount}€\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport toast from \"react-hot-toast\";\nimport QrReader from \"react-qr-reader\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport Modal, { ModalControlProps } from \"./Modal\";\n\ntype Props = ModalControlProps;\ntype QRCodeType = {\n  url: string;\n  key: string;\n};\nexport default function UploadModal({ opened, onClose }: Props) {\n  const { store } = React.useContext(LocalStorageContext);\n  const onQRReaderError = (error: any) => {\n    toast.error(error?.message ?? \"Error with QR code\");\n  };\n\n  const onQRDetected = async (data: any) => {\n    if (data) {\n      const decodedData = JSON.parse(data) as QRCodeType;\n      if (!decodedData?.url || !decodedData?.key) {\n        throw new Error();\n      }\n\n      try {\n        const response = await fetch(decodedData.url, {\n          method: \"POST\",\n          body: JSON.stringify(store),\n        });\n        const responseJson = await response.json();\n        toast.success(\"Code detected\");\n        onClose();\n      } catch (e) {\n        console.log(e);\n        // toast.error(\"Invalid QR code\");\n        toast.error(e.message);\n      }\n    }\n  };\n  return (\n    <Modal title=\"Upload record\" opened={opened} onClose={onClose}>\n      <span className=\"text-sm font-bold text-color-300 leading-4\">\n        Upload expenditure records on this device to server by sending its QR\n        code.\n      </span>\n      <QrReader\n        className=\"mt-4 rounded-lg w-full overflow-hidden\"\n        onError={onQRReaderError}\n        onScan={onQRDetected}\n      />\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport AmountInput from \"./components/AmountInput\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport SubmitButton from \"./components/SubmitButton\";\nimport MultipleSelect from \"./components/MultipleSelect\";\nimport LocalStorageContextProvider, {\n  LocalStorageContext,\n} from \"./contexts/LocalStorageContext\";\nimport { PageList } from \"./pageList\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport RecordListPage from \"./pages/RecordListPage\";\nimport UploadModal from \"./components/UploadModal\";\n\ntype Form = {\n  amount: number;\n  description: string;\n  labels: string[];\n};\n\nconst defaultFormValue: Form = {\n  amount: 0,\n  description: \"\",\n  labels: [],\n};\nfunction App() {\n  const [page, setPage] = React.useState<PageList>(PageList.HOME_PAGE);\n  const { addExpenditure, store } = React.useContext(LocalStorageContext);\n  const [formValue, setFormValue] = React.useState<Form>(defaultFormValue);\n  const [uploadFormModalOpened, setUploadFormOpened] = React.useState(false);\n\n  const labelsAddedInStore = store.expenditures.reduce<string[]>(\n    (labels, expenditure) =>\n      Array.from(new Set([...labels, ...expenditure.labels])),\n    []\n  );\n\n  const saveForm = () => {\n    if (formValue.amount <= 0 || !formValue.description) {\n      toast.error(\"missing description or amount is invalid.\");\n      return;\n    }\n    addExpenditure({\n      ...formValue,\n      amount: formValue.amount / 100,\n      date: new Date(),\n      id: `${new Date().getTime()}-${Math.random().toString().split(\".\")[1]}`,\n    });\n    setFormValue(defaultFormValue);\n    toast.success(\"Expenditure logged!\");\n  };\n\n  return (\n    <div className=\"absolute vertical inset-0 flex p-4 bg-primary-500 overflow-hidden\">\n      <Toaster />\n      <UploadModal\n        opened={uploadFormModalOpened}\n        onClose={() => setUploadFormOpened(false)}\n      />\n      <Header currentPage={page} goPage={setPage} />\n      {page === PageList.HOME_PAGE && (\n        <div className=\"flex-1 vertical overflow-hidden\">\n          <AmountInput\n            value={formValue.amount}\n            onChange={(newValue) =>\n              setFormValue({ ...formValue, amount: newValue })\n            }\n          />\n          <Input\n            name=\"description\"\n            label=\"description\"\n            value={formValue.description}\n            onChange={(desc) =>\n              setFormValue({ ...formValue, description: desc })\n            }\n          />\n          <MultipleSelect\n            name=\"labels\"\n            label=\"tags\"\n            values={formValue.labels}\n            onChange={(labels) => setFormValue({ ...formValue, labels })}\n            selectableOptions={labelsAddedInStore}\n          />\n          <div className=\"flex-1\" />\n          <SubmitButton\n            onOpenUploadModal={() => setUploadFormOpened(true)}\n            onSubmit={saveForm}\n          />\n        </div>\n      )}\n      {page === PageList.RECORD_LIST_PAGE && <RecordListPage />}\n    </div>\n  );\n}\n\nexport default function AppWithContexts() {\n  return (\n    <LocalStorageContextProvider>\n      <App />\n    </LocalStorageContextProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}