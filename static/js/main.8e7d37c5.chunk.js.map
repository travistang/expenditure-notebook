{"version":3,"sources":["backend/types.ts","pageList.ts","backend/ls.ts","contexts/LocalStorageContext.tsx","components/RecordListPage/RecordListRow.tsx","pages/RecordListPage.tsx","components/AmountInput.tsx","components/Input.tsx","components/Modal.tsx","components/CurrencyConfig/CurrencyConfigPanel.tsx","components/CurrencyConfig/CurrencyConfigEntry.tsx","components/MultipleSelect/SelectedOptionChip.tsx","components/MultipleSelect/index.tsx","components/SubmitButton.tsx","components/UploadModal.tsx","pages/AddRecordPage.tsx","components/ClipboardModal.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Currency","PageList","DEFAULT_DB_VALUE","expenditures","LS_STORAGE_KEY","LocalStorageContext","React","createContext","store","addExpenditure","_","LocalStorageContextProvider","children","db","key","data","JSON","parse","localStorage","getItem","split","reduce","result","keyPart","getData","useState","setStore","useEffect","setItem","stringify","contextValue","expenditure","Provider","value","RecordListRow","record","className","format","Date","date","description","amount","toFixed","currencyConfig","currency","EUR","exchangeRate","getSymbolFromCurrency","monthlyExpenditureOfDay","day","filter","isSameMonth","total","RecordListPage","useContext","expenditureList","sort","a","b","getTime","now","oneMonthAgo","subMonths","expenditureOfTheMonth","expenditureDifferences","classNames","Math","abs","map","id","AmountInput","onChange","inputRef","useRef","valueString","screenWidth","window","screen","width","ref","style","fontSize","min","length","type","onKeyDown","e","keyAsDigit","parseInt","Number","isNaN","floor","Input","name","label","htmlFor","classnames","target","Modal","title","opened","onClose","onClick","stopPropagation","CurrencyConfigPanel","onSelect","setExchangeRate","Object","values","newCurrency","exchangeRateValue","parseFloat","onChangeCurrency","toString","CurrencyConfigEntry","configuringCurrency","setConfiguringCurrency","foreignCurrencySymbol","currencyToSymbolMap","SelectedOptionChip","text","onDelete","icon","faTimes","MultipleSelect","selectableOptions","editingValue","setEditingValue","onAddOption","selectedOption","finalAddingOption","find","opt","toLowerCase","onRemove","option","displayingSelectableOptions","includes","slice","SubmitButton","onOpenUploadModal","formValue","onSubmit","toast","error","finalAmountInEuro","random","success","faPen","faQrcode","UploadModal","onQRDetected","decodedData","url","Error","fetch","method","body","response","json","console","log","message","onError","onScan","defaultFormValue","labels","AddRecordPage","uploadFormModalOpened","setUploadFormOpened","setFormValue","labelsAddedInStore","Array","from","Set","newValue","newConfig","desc","ClipboardModal","contentEditable","copy","faClipboard","Header","currentPage","goPage","goingPage","HOME_PAGE","RECORD_LIST_PAGE","goingPageIcon","faHome","faList","clipboardModalOpen","setClipboardModalOpen","App","page","setPage","AppWithContexts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e7d37c5.chunk.js","sourcesContent":["export enum Currency {\n  EUR = \"EUR\",\n  USD = \"USD\",\n  PLN = \"PLN\",\n  HKD = \"HKD\",\n}\n\nexport type CurrencyConfigType = { currency: Currency; exchangeRate: number };\n\nexport type Expenditure = {\n  description: string;\n  date: Date;\n  amount: number;\n  labels: string[];\n  id: string;\n  currencyConfig?: CurrencyConfigType;\n};\n\nexport type Form = Omit<Expenditure, \"id\" | \"date\" | \"currencyConfig\"> & {\n  currencyConfig: CurrencyConfigType;\n};\n\nexport type DB = {\n  expenditures: Expenditure[];\n};\n\nexport const DEFAULT_DB_VALUE: DB = {\n  expenditures: [],\n};\n","export enum PageList {\n  HOME_PAGE,\n  RECORD_LIST_PAGE,\n}\n","import { DB, DEFAULT_DB_VALUE } from \"./types\";\n\nconst LS_STORAGE_KEY = \"ls/expenditure\";\n\nexport const saveData = (data: object) => {\n  localStorage.setItem(LS_STORAGE_KEY, JSON.stringify(data));\n};\n\nexport const getData = <T>(key?: string): T | null => {\n  try {\n    const data: DB =\n      JSON.parse(localStorage.getItem(LS_STORAGE_KEY) || \"\") ||\n      DEFAULT_DB_VALUE;\n    return key\n      ? key.split(\".\").reduce<any>((result, keyPart) => result?.[keyPart], data)\n      : data;\n  } catch {\n    return null;\n  }\n};\n","import React from \"react\";\nimport { getData, saveData } from \"../backend/ls\";\nimport { DB, DEFAULT_DB_VALUE, Expenditure } from \"../backend/types\";\n\nexport type LocalStorageContextType = {\n  store: DB;\n  addExpenditure: (expenditure: Expenditure) => void;\n};\nexport const LocalStorageContext = React.createContext<LocalStorageContextType>(\n  { store: DEFAULT_DB_VALUE, addExpenditure: (_) => {} }\n);\n\ntype Props = {\n  children: React.ReactNode;\n};\nexport default function LocalStorageContextProvider({ children }: Props) {\n  const db: DB = getData() || { expenditures: [] };\n  const [store, setStore] = React.useState<DB>(db);\n\n  React.useEffect(() => {\n    if (store) {\n      saveData(store);\n    }\n  }, [store]);\n  const addExpenditure = (expenditure: Expenditure) => {\n    setStore({\n      ...store,\n      expenditures: [...store.expenditures, expenditure],\n    });\n  };\n\n  const contextValue = {\n    store,\n    addExpenditure,\n  };\n  return (\n    <LocalStorageContext.Provider value={contextValue}>\n      {children}\n    </LocalStorageContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\nimport { Currency, Expenditure } from \"../../backend/types\";\n\ntype Props = {\n  record: Expenditure;\n};\nexport default function RecordListRow({ record }: Props) {\n  return (\n    <div className=\"flex-shrink-0 items-center grid grid-cols-12 h-16 border-t border-b border-primary-200\">\n      <span className=\"col-span-3\">\n        {format(new Date(record.date), \"yyyy-MM-dd HH:mm\")}\n      </span>\n      <span className=\"col-span-6 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {record.description}\n      </span>\n      <div className=\"flex flex-col justify-center col-span-3 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {record.amount.toFixed(2)}€\n        {record.currencyConfig &&\n          record.currencyConfig.currency !== Currency.EUR && (\n            <span className=\"text-opacity-60 text-xs font-bold\">\n              ({(record.amount * record.currencyConfig.exchangeRate).toFixed(2)}{\" \"}\n              {getSymbolFromCurrency(record.currencyConfig.currency)})\n            </span>\n          )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { isSameMonth, subMonths } from \"date-fns\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport classNames from \"classnames\";\nimport RecordListRow from \"../components/RecordListPage/RecordListRow\";\nimport { DB } from \"../backend/types\";\n\nconst monthlyExpenditureOfDay = (store: DB, day: Date) =>\n  store.expenditures\n    ?.filter((record) => isSameMonth(day, new Date(record.date)))\n    .reduce((total, record) => total + record.amount, 0) ?? 0;\n\nexport default function RecordListPage() {\n  const { store } = React.useContext(LocalStorageContext);\n  const expenditureList = store?.expenditures?.sort(\n    (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()\n  );\n  const now = new Date();\n  const oneMonthAgo = subMonths(now, 1);\n\n  const expenditureOfTheMonth = monthlyExpenditureOfDay(store, now);\n  const expenditureOfLastMonth = monthlyExpenditureOfDay(store, oneMonthAgo);\n  const expenditureDifferences = expenditureOfTheMonth - expenditureOfLastMonth;\n  return (\n    <div className=\"vertical flex-1 overflow-y-scroll\">\n      <div className=\"sticky top-0 h-16 flex-shrink-0 bg-primary-700 flex items-center justify-between\">\n        <div className=\"text-sm uppercase vertical text-green-500 font-bold\">\n          <span>Current month</span>\n          <b className=\"text-3xl text-green-400\">\n            {expenditureOfTheMonth.toFixed(2)}€\n          </b>\n        </div>\n        <div\n          className={classNames(\n            \"text-sm\",\n            expenditureDifferences <= 0 ? \"text-green-500\" : \"text-red-500\"\n          )}\n        >\n          {expenditureDifferences <= 0 ? \"-\" : \"+\"}\n          {Math.abs(expenditureDifferences).toFixed(2)}€\n        </div>\n      </div>\n      {expenditureList?.map((record) => (\n        <RecordListRow record={record} key={record.id} />\n      ))}\n    </div>\n  );\n}\n","import getSymbolFromCurrency from \"currency-symbol-map\";\nimport React, { KeyboardEventHandler } from \"react\";\nimport { Currency } from \"../backend/types\";\n\ntype Props = {\n  value: number;\n  currency: Currency;\n  onChange: (value: number) => void;\n};\nexport default function AmountInput({ value, currency, onChange }: Props) {\n  const inputRef = React.useRef(null);\n\n  const valueString = `${(value / 100).toFixed(2)}${getSymbolFromCurrency(\n    currency\n  )}`;\n\n  const screenWidth = window.screen.width;\n  const onInput: KeyboardEventHandler = (e) => {\n    const key = e.key;\n    const keyAsDigit = parseInt(key);\n    if (!Number.isNaN(keyAsDigit)) {\n      onChange(value * 10 + keyAsDigit);\n    }\n\n    if (key === \"Backspace\") {\n      onChange(Math.floor(value / 10));\n    }\n  };\n  return (\n    <input\n      ref={inputRef}\n      style={{\n        fontSize: Math.min((1.5 * screenWidth) / valueString.length, 128),\n      }}\n      className=\"digit center text-color-100 bg-primary-700 text-center\"\n      value={valueString}\n      type=\"tel\"\n      onKeyDown={onInput}\n    ></input>\n  );\n}\n","import classnames from \"classnames\";\n\ntype Props = {\n  children?: React.ReactNode;\n  value: string;\n  name: string;\n  label: string;\n  className?: string;\n  onChange: (value: string) => void;\n};\nexport default function Input({\n  children,\n  className,\n  name,\n  label,\n  value,\n  onChange,\n}: Props) {\n  return (\n    <div className=\"vertical gap-1\">\n      <label htmlFor={name}>{label}</label>\n      <div\n        className={classnames(\n          \"rounded-lg bg-primary-500 p-4 horizontal\",\n          className\n        )}\n      >\n        {children}\n        <input\n          className=\"bg-primary-500 text-primary-100 w-full outline-none text-xl\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import classnames from \"classnames\";\n\nexport type ModalControlProps = {\n  opened: boolean;\n  onClose: () => void;\n};\ntype Props = ModalControlProps & {\n  title: string;\n  className?: string;\n  children: React.ReactNode;\n};\nexport default function Modal({\n  children,\n  title,\n  opened,\n  onClose,\n  className,\n}: Props) {\n  if (!opened) {\n    return null;\n  }\n  return (\n    <div\n      className=\"fixed z-10 inset-0 p-4 center bg-color-700 bg-opacity-60\"\n      onClick={onClose}\n    >\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className={classnames(\n          \"rounded-lg w-full bg-primary-600 text-color-100 vertical overflow-y-auto\",\n          className || \"h-2/3 p-2\"\n        )}\n      >\n        <span className=\"uppercase font-bold text-md text-color-100 mb-2\">\n          {title}\n        </span>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import getSymbolFromCurrency from \"currency-symbol-map\";\nimport { useState } from \"react\";\nimport Input from \"../Input\";\nimport Modal, { ModalControlProps } from \"../Modal\";\nimport { Currency, CurrencyConfigType } from \"../../backend/types\";\n\ntype Props = ModalControlProps & {\n  onSelect: (updateCurrencyType: CurrencyConfigType) => void;\n};\nexport default function CurrencyConfigPanel({\n  onClose,\n  opened,\n  onSelect,\n}: Props) {\n  const [exchangeRate, setExchangeRate] = useState(\"1\");\n  const onChangeCurrency = (newCurrency: Currency) => {\n    const exchangeRateValue = parseFloat(exchangeRate) ?? 1;\n    onSelect({ exchangeRate: exchangeRateValue, currency: newCurrency });\n    onClose();\n  };\n  return (\n    <Modal onClose={onClose} opened={opened} title=\"Change record currency\">\n      <div className=\"grid gap-4 grid-cols-2 flex-1 mb-4\">\n        {Object.values(Currency).map((currency) => (\n          <button\n            onClick={() => onChangeCurrency(currency)}\n            className=\"rounded-lg bg-primary-500 border-none bg-transparent flex flex-col items-center justify-center\"\n          >\n            <div className=\"text-5xl\">{getSymbolFromCurrency(currency)}</div>\n            <div>{currency}</div>\n          </button>\n        ))}\n      </div>\n      <Input\n        label=\"Exchange rate (1 EUR -> ?)\"\n        value={exchangeRate.toString()}\n        onChange={setExchangeRate}\n        name=\"exchangeRate\"\n      />\n    </Modal>\n  );\n}\n","import currencyToSymbolMap from \"currency-symbol-map\";\nimport { useState } from \"react\";\nimport { Currency, CurrencyConfigType } from \"../../backend/types\";\nimport CurrencyConfigPanel from \"./CurrencyConfigPanel\";\n\ntype Props = {\n  amount: number;\n  currencyConfig: CurrencyConfigType;\n  onChangeCurrency: (changeCurrencyPayload: CurrencyConfigType) => void;\n};\nexport default function CurrencyConfigEntry({\n  amount,\n  currencyConfig,\n  onChangeCurrency,\n}: Props) {\n  const [configuringCurrency, setConfiguringCurrency] = useState(false);\n  const { currency, exchangeRate } = currencyConfig;\n  const foreignCurrencySymbol = currencyToSymbolMap(currency);\n  return (\n    <div className=\"w-full flex items-center justify-end mb-2\">\n      {currency !== Currency.EUR && (\n        <div className=\"flex flex-col gap-1 flex-1\">\n          <span className=\"font-bold text-sm text-secondary-500\">\n            ≈ {(amount / 100 / exchangeRate).toFixed(2)}€\n          </span>\n          <span className=\"text-xs\">\n            (1€ : {exchangeRate.toFixed(2)} {foreignCurrencySymbol})\n          </span>\n        </div>\n      )}\n      <button\n        onClick={() => setConfiguringCurrency(true)}\n        className=\"rounded-full w-12 h-8 flex items-center justify-center bg-primary-500 text-primary-100\"\n      >\n        {foreignCurrencySymbol}\n      </button>\n      {configuringCurrency && (\n        <CurrencyConfigPanel\n          onSelect={onChangeCurrency}\n          onClose={() => setConfiguringCurrency(false)}\n          opened={configuringCurrency}\n        />\n      )}\n    </div>\n  );\n}\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype Props = {\n  text: string;\n  onDelete: () => void;\n};\n\nexport default function SelectedOptionChip({ text, onDelete }: Props) {\n  return (\n    <div\n      onClick={onDelete}\n      className=\"horizontal-center px-2 py-1 rounded-md bg-primary-500 text-sm text-color-100\"\n    >\n      <span className=\"pr-1\">{text}</span>\n      <FontAwesomeIcon icon={faTimes} className=\"pl-1 w-8 h-8\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport SelectedOptionChip from \"./SelectedOptionChip\";\n\ntype Props = {\n  values: string[];\n  name: string;\n  label: string;\n  onChange: (values: string[]) => void;\n  selectableOptions?: string[];\n};\nexport default function MultipleSelect({\n  name,\n  label,\n  values,\n  onChange,\n  selectableOptions = [],\n}: Props) {\n  const [editingValue, setEditingValue] = React.useState(\"\");\n\n  const onAddOption = (selectedOption?: string) => {\n    const finalAddingOption = selectedOption || editingValue;\n    if (!finalAddingOption) {\n      return;\n    }\n    const hasExistingOptionMatchingInput = values.find(\n      (opt) => opt.toLowerCase() === finalAddingOption.toLowerCase()\n    );\n    if (hasExistingOptionMatchingInput) {\n      return;\n    }\n    onChange([...values, finalAddingOption]);\n    setEditingValue(\"\");\n  };\n\n  const onRemove = (option: string) => () => {\n    onChange(values.filter((opt) => opt !== option));\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      onAddOption();\n    }\n\n    if (\n      e.key === \"Backspace\" &&\n      editingValue.length === 0 &&\n      values.length > 0\n    ) {\n      onRemove(values[values.length - 1])();\n    }\n  };\n\n  const displayingSelectableOptions =\n    editingValue.length < 2\n      ? []\n      : selectableOptions\n          .filter(\n            (opt) =>\n              opt.toLowerCase().includes(editingValue.toLowerCase()) &&\n              !values.find((value) => value.toLowerCase() === opt.toLowerCase())\n          )\n          .sort()\n          .slice(0, 5);\n  return (\n    <div className=\"vertical gap-1 overflow-y-visible\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"flex items-center gap-2 overflow-x-auto max-w-md\">\n        {values.map((value) => (\n          <SelectedOptionChip\n            text={value}\n            key={value}\n            onDelete={onRemove(value)}\n          />\n        ))}\n      </div>\n      <div\n        className={classnames(\n          \"relative inline-block rounded-lg bg-primary-500 p-4 horizontal overflow-x-auto overflow-y-hidden\",\n          \"gap-2\"\n        )}\n      >\n        <input\n          onKeyDown={onKeyDown}\n          className=\"bg-primary-500 w-full outline-none text-xl\"\n          value={editingValue}\n          onChange={(e) => setEditingValue(e.target.value)}\n        />\n      </div>\n      {displayingSelectableOptions?.length > 0 && (\n        <div className=\"absolute min-h-20 bg-primary-500 rounded-lg left-0 right-0 bottom-0 z-20 max-h-32 mt-2 overflow-y-auto\">\n          {displayingSelectableOptions.map((opt) => (\n            <div\n              key={opt}\n              onClick={() => onAddOption(opt)}\n              className=\"cursor-pointer px-2 h-12 whitespace-nowrap overflow-ellipsis horizontal-center hover:bg-primary-700\"\n            >\n              {opt}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faQrcode } from \"@fortawesome/free-solid-svg-icons\";\nimport { Currency, Form } from \"../backend/types\";\nimport toast from \"react-hot-toast\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\n\ntype Props = {\n  onSubmit: () => void;\n  formValue: Form;\n  onOpenUploadModal: () => void;\n};\nexport default function SubmitButton({\n  onOpenUploadModal,\n  formValue,\n  onSubmit,\n}: Props) {\n  const { addExpenditure } = React.useContext(LocalStorageContext);\n  const saveForm = () => {\n    if (formValue.amount <= 0 || !formValue.description) {\n      toast.error(\"missing description or amount is invalid.\");\n      return;\n    }\n    if (\n      [0, 1].includes(formValue.currencyConfig.exchangeRate) &&\n      formValue.currencyConfig.currency !== Currency.EUR\n    ) {\n      toast.error(\"Exchange rate cannot be 0 or 1\");\n      return;\n    }\n\n    const finalAmountInEuro =\n      formValue.currencyConfig.currency === Currency.EUR\n        ? formValue.amount\n        : formValue.amount / formValue.currencyConfig.exchangeRate;\n    addExpenditure({\n      ...formValue,\n      amount: finalAmountInEuro / 100,\n      date: new Date(),\n      id: `${new Date().getTime()}-${Math.random().toString().split(\".\")[1]}`,\n    });\n    onSubmit();\n    toast.success(\"Expenditure logged!\");\n  };\n  return (\n    <div className=\"h-1/6 md:h-1/3 center w-full relative\">\n      <button\n        onClick={saveForm}\n        className=\"h-20 w-20 md:h-96 md:w-96 lg:h-48 lg:w-48 rounded-full bg-secondary-500 text-xl md:text-7xl\"\n      >\n        <FontAwesomeIcon icon={faPen} />\n      </button>\n      <div className=\"absolute right-0 top-0 h-full horizontal-center gap-2\">\n        <button\n          onClick={onOpenUploadModal}\n          className=\"text-3xl md:text-7xl rounded-full center h-12 w-12 lg:h-24 lg:w-24 bg-color-50 text-primary-700\"\n        >\n          <FontAwesomeIcon icon={faQrcode} className=\"text-primary-700\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport toast from \"react-hot-toast\";\nimport QrReader from \"react-qr-reader\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport Modal, { ModalControlProps } from \"./Modal\";\n\ntype Props = ModalControlProps;\ntype QRCodeType = {\n  url: string;\n  key: string;\n};\nexport default function UploadModal({ opened, onClose }: Props) {\n  const { store } = React.useContext(LocalStorageContext);\n  const onQRReaderError = (error: any) => {\n    toast.error(error?.message ?? \"Error with QR code\");\n  };\n\n  const onQRDetected = async (data: any) => {\n    if (data) {\n      const decodedData = JSON.parse(data) as QRCodeType;\n      if (!decodedData?.url || !decodedData?.key) {\n        throw new Error();\n      }\n\n      try {\n        const response = await fetch(decodedData.url, {\n          method: \"POST\",\n          body: JSON.stringify(store),\n        });\n        const responseJson = await response.json();\n        toast.success(\"Code detected\");\n        onClose();\n      } catch (e) {\n        console.log(e);\n        // toast.error(\"Invalid QR code\");\n        toast.error(e.message);\n      }\n    }\n  };\n  return (\n    <Modal title=\"Upload record\" opened={opened} onClose={onClose}>\n      <span className=\"text-sm font-bold text-color-300 leading-4\">\n        Upload expenditure records on this device to server by sending its QR\n        code.\n      </span>\n      <QrReader\n        className=\"mt-4 rounded-lg w-full overflow-hidden\"\n        onError={onQRReaderError}\n        onScan={onQRDetected}\n      />\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { Currency, Form } from \"../backend/types\";\nimport AmountInput from \"../components/AmountInput\";\nimport CurrencyConfigEntry from \"../components/CurrencyConfig/CurrencyConfigEntry\";\nimport Input from \"../components/Input\";\nimport MultipleSelect from \"../components/MultipleSelect\";\nimport SubmitButton from \"../components/SubmitButton\";\nimport UploadModal from \"../components/UploadModal\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\n\nconst defaultFormValue: Form = {\n  amount: 0,\n  description: \"\",\n  labels: [],\n  currencyConfig: {\n    currency: Currency.EUR,\n    exchangeRate: 1,\n  },\n};\n\nexport default function AddRecordPage() {\n  const { store } = React.useContext(LocalStorageContext);\n  const [uploadFormModalOpened, setUploadFormOpened] = React.useState(false);\n  const [formValue, setFormValue] = React.useState<Form>(defaultFormValue);\n  const reset = () => setFormValue(defaultFormValue);\n  const labelsAddedInStore = store.expenditures.reduce<string[]>(\n    (labels, expenditure) =>\n      Array.from(new Set([...labels, ...expenditure.labels])),\n    []\n  );\n\n  return (\n    <div className=\"flex-1 vertical overflow-hidden\">\n      <UploadModal\n        opened={uploadFormModalOpened}\n        onClose={() => setUploadFormOpened(false)}\n      />\n      <AmountInput\n        currency={formValue.currencyConfig.currency}\n        value={formValue.amount}\n        onChange={(newValue) =>\n          setFormValue({ ...formValue, amount: newValue })\n        }\n      />\n      <CurrencyConfigEntry\n        amount={formValue.amount}\n        currencyConfig={formValue.currencyConfig}\n        onChangeCurrency={(newConfig) =>\n          setFormValue({ ...formValue, currencyConfig: newConfig })\n        }\n      />\n      <Input\n        name=\"description\"\n        label=\"description\"\n        value={formValue.description}\n        onChange={(desc) => setFormValue({ ...formValue, description: desc })}\n      />\n      <MultipleSelect\n        name=\"labels\"\n        label=\"tags\"\n        values={formValue.labels}\n        onChange={(labels) => setFormValue({ ...formValue, labels })}\n        selectableOptions={labelsAddedInStore}\n      />\n      <div className=\"flex-1\" />\n      <SubmitButton\n        onSubmit={reset}\n        formValue={formValue}\n        onOpenUploadModal={() => setUploadFormOpened(true)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport copy from \"copy-to-clipboard\";\n\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport toast from \"react-hot-toast\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\nimport Modal, { ModalControlProps } from \"./Modal\";\n\ntype Props = ModalControlProps;\n\nexport default function ClipboardModal({ opened, onClose }: Props) {\n  const { store } = React.useContext(LocalStorageContext);\n  const copyToClipboard = () => {\n    copy(JSON.stringify(store));\n    toast.success(\"Copied store value to clipboard!\");\n  };\n  return (\n    <Modal\n      title=\"Copy store content to clipboard\"\n      opened={opened}\n      onClose={onClose}\n    >\n      <textarea\n        id=\"store-text\"\n        className=\"shadow-inner rounded-lg bg-primary-700 code digit flex-1 resize-none\"\n        value={JSON.stringify(store)}\n        contentEditable={false}\n      />\n      <div className=\"h-16 py-2 flex items-center justify-end\">\n        <button\n          type=\"button\"\n          onClick={copyToClipboard}\n          className=\"rounded-lg bg-secondary-500 gap-2 flex items-center p-2 h-full hover:bg-secondary-600\"\n        >\n          <FontAwesomeIcon icon={faClipboard} />\n          Copy to clipboard\n        </button>\n      </div>\n    </Modal>\n  );\n}\n","import { faClipboard, faHome, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { PageList } from \"../pageList\";\nimport ClipboardModal from \"./ClipboardModal\";\n\ntype Props = {\n  currentPage: PageList;\n  goPage: (page: PageList) => void;\n};\nexport default function Header({ currentPage, goPage }: Props) {\n  const goingPage =\n    currentPage === PageList.HOME_PAGE\n      ? PageList.RECORD_LIST_PAGE\n      : PageList.HOME_PAGE;\n  const goingPageIcon = goingPage === PageList.HOME_PAGE ? faHome : faList;\n  const go = () => goPage(goingPage);\n\n  const [clipboardModalOpen, setClipboardModalOpen] = React.useState(false);\n\n  return (\n    <>\n      <header className=\"h-16 flex-0 center relative\">\n        <span className=\"uppercase text-lg\">Expenditure logbook</span>\n        <div className=\"absolute right-0 top-0 h-full horizontal-center gap-4 text-xl\">\n          <FontAwesomeIcon\n            icon={faClipboard}\n            className=\"cursor-pointer\"\n            onClick={() => setClipboardModalOpen(true)}\n          />\n          <FontAwesomeIcon\n            icon={goingPageIcon}\n            onClick={go}\n            className=\"cursor-pointer\"\n          />\n        </div>\n      </header>\n      <ClipboardModal\n        opened={clipboardModalOpen}\n        onClose={() => setClipboardModalOpen(false)}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Toaster } from \"react-hot-toast\";\n\nimport LocalStorageContextProvider from \"./contexts/LocalStorageContext\";\n\nimport { PageList } from \"./pageList\";\nimport RecordListPage from \"./pages/RecordListPage\";\nimport AddRecordPage from \"./pages/AddRecordPage\";\n\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [page, setPage] = React.useState<PageList>(PageList.HOME_PAGE);\n\n  return (\n    <div className=\"absolute vertical inset-0 flex p-4 bg-primary-700 overflow-hidden\">\n      <Toaster />\n      <Header currentPage={page} goPage={setPage} />\n      {page === PageList.HOME_PAGE && <AddRecordPage />}\n      {page === PageList.RECORD_LIST_PAGE && <RecordListPage />}\n    </div>\n  );\n}\n\nexport default function AppWithContexts() {\n  return (\n    <LocalStorageContextProvider>\n      <App />\n    </LocalStorageContextProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}