{"version":3,"sources":["components/AmountInput.tsx","pageList.ts","components/Header.tsx","components/Input.tsx","components/SubmitButton.tsx","components/MultipleSelect/SelectedOptionChip.tsx","components/MultipleSelect/index.tsx","backend/types.ts","backend/ls.ts","contexts/LocalStorageContext.tsx","pages/RecordListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AmountInput","value","onChange","inputRef","React","useRef","valueString","toFixed","screenWidth","window","screen","width","ref","style","fontSize","length","className","type","onKeyDown","e","key","keyAsDigit","parseInt","Number","isNaN","Math","floor","PageList","Header","currentPage","goPage","goingPage","HOME_PAGE","RECORD_LIST_PAGE","goingPageIcon","faHome","faList","icon","onClick","Input","children","name","label","htmlFor","classnames","target","SubmitButton","onSubmit","faPen","SelectedOptionChip","text","onDelete","faTimes","MultipleSelect","values","selectableOptions","useState","editingValue","setEditingValue","onAddOption","selectedOption","finalAddingOption","find","opt","toLowerCase","onRemove","option","filter","displayingSelectableOptions","includes","sort","slice","map","DEFAULT_DB_VALUE","expenditures","LS_STORAGE_KEY","LocalStorageContext","createContext","store","addExpenditure","_","LocalStorageContextProvider","db","data","JSON","parse","localStorage","getItem","split","reduce","result","keyPart","getData","setStore","useEffect","setItem","stringify","contextValue","expenditure","Provider","RecordListPage","useContext","record","format","Date","date","description","amount","defaultFormValue","labels","App","page","setPage","formValue","setFormValue","labelsAddedInStore","Array","from","Set","newValue","desc","toast","error","id","getTime","random","toString","success","AppWithContexts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbf34ed0.chunk.js","sourcesContent":["import React, { KeyboardEventHandler } from \"react\";\n\ntype Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\nexport default function AmountInput({ value, onChange }: Props) {\n  const inputRef = React.useRef(null);\n\n  const valueString = `${(value / 100).toFixed(2)}â‚¬`;\n\n  const screenWidth = window.screen.width;\n  const onInput: KeyboardEventHandler = (e) => {\n    const key = e.key;\n    const keyAsDigit = parseInt(key);\n    if (!Number.isNaN(keyAsDigit)) {\n      onChange(value * 10 + keyAsDigit);\n    }\n\n    if (key === \"Backspace\") {\n      onChange(Math.floor(value / 10));\n    }\n  };\n  return (\n    <input\n      ref={inputRef}\n      style={{ fontSize: (1.5 * screenWidth) / valueString.length }}\n      className=\"digit center text-color-100 bg-primary-500 text-center\"\n      value={valueString}\n      type=\"tel\"\n      onKeyDown={onInput}\n    ></input>\n  );\n}\n","export enum PageList {\n  HOME_PAGE,\n  RECORD_LIST_PAGE,\n}\n","import { faHome, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { PageList } from \"../pageList\";\n\ntype Props = {\n  currentPage: PageList;\n  goPage: (page: PageList) => void;\n};\nexport default function Header({ currentPage, goPage }: Props) {\n  const goingPage =\n    currentPage === PageList.HOME_PAGE\n      ? PageList.RECORD_LIST_PAGE\n      : PageList.HOME_PAGE;\n  const goingPageIcon = goingPage === PageList.HOME_PAGE ? faHome : faList;\n  const go = () => goPage(goingPage);\n  return (\n    <header className=\"h-16 center relative\">\n      <span className=\"uppercase text-lg\">Expenditure logbook</span>\n      <div className=\"absolute right-0 top-0 h-full horizontal-center gap-4 text-xl\">\n        <FontAwesomeIcon\n          icon={goingPageIcon}\n          onClick={go}\n          className=\"cursor-pointer\"\n        />\n      </div>\n    </header>\n  );\n}\n","import classnames from \"classnames\";\n\ntype Props = {\n  children?: React.ReactNode;\n  value: string;\n  name: string;\n  label: string;\n  className?: string;\n  onChange: (value: string) => void;\n};\nexport default function Input({\n  children,\n  className,\n  name,\n  label,\n  value,\n  onChange,\n}: Props) {\n  return (\n    <div className=\"vertical gap-1\">\n      <label htmlFor={name}>{label}</label>\n      <div\n        className={classnames(\n          \"rounded-lg bg-primary-200 p-4 horizontal\",\n          className\n        )}\n      >\n        {children}\n        <input\n          className=\"bg-primary-200 w-full outline-none text-2xl\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n  onSubmit: () => void;\n};\nexport default function SubmitButton({ onSubmit }: Props) {\n  return (\n    <div className=\"h-1/6 md:h-1/3 center w-full\">\n      <button\n        onClick={onSubmit}\n        className=\"h-20 w-20 md:h-96 md:w-96 rounded-full bg-secondary-500 text-xl md:text-7xl\"\n      >\n        <FontAwesomeIcon icon={faPen} />\n      </button>\n    </div>\n  );\n}\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype Props = {\n  text: string;\n  onDelete: () => void;\n};\n\nexport default function SelectedOptionChip({ text, onDelete }: Props) {\n  return (\n    <div\n      onClick={onDelete}\n      className=\"horizontal-center px-2 py-1 rounded-md bg-primary-100 text-sm text-color-100\"\n    >\n      <span className=\"pr-1\">{text}</span>\n      <FontAwesomeIcon icon={faTimes} className=\"pl-1 w-8 h-8\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport SelectedOptionChip from \"./SelectedOptionChip\";\n\ntype Props = {\n  values: string[];\n  name: string;\n  label: string;\n  onChange: (values: string[]) => void;\n  selectableOptions?: string[];\n};\nexport default function MultipleSelect({\n  name,\n  label,\n  values,\n  onChange,\n  selectableOptions = [],\n}: Props) {\n  const [editingValue, setEditingValue] = React.useState(\"\");\n\n  const onAddOption = (selectedOption?: string) => {\n    const finalAddingOption = selectedOption || editingValue;\n    if (!finalAddingOption) {\n      return;\n    }\n    const hasExistingOptionMatchingInput = values.find(\n      (opt) => opt.toLowerCase() === finalAddingOption.toLowerCase()\n    );\n    if (hasExistingOptionMatchingInput) {\n      return;\n    }\n    onChange([...values, finalAddingOption]);\n    setEditingValue(\"\");\n  };\n\n  const onRemove = (option: string) => () => {\n    onChange(values.filter((opt) => opt !== option));\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === \"Enter\") {\n      onAddOption();\n    }\n\n    if (\n      e.key === \"Backspace\" &&\n      editingValue.length === 0 &&\n      values.length > 0\n    ) {\n      onRemove(values[values.length - 1])();\n    }\n  };\n\n  const displayingSelectableOptions =\n    editingValue.length < 2\n      ? []\n      : selectableOptions\n          .filter(\n            (opt) =>\n              opt.toLowerCase().includes(editingValue.toLowerCase()) &&\n              !values.find((value) => value.toLowerCase() === opt.toLowerCase())\n          )\n          .sort()\n          .slice(0, 5);\n  return (\n    <div className=\"vertical gap-1\">\n      <label htmlFor={name}>{label}</label>\n      <div\n        className={classnames(\n          \"relative rounded-lg bg-primary-200 p-4 horizontal\",\n          \"gap-2\"\n        )}\n      >\n        {values.map((value) => (\n          <SelectedOptionChip\n            text={value}\n            key={value}\n            onDelete={onRemove(value)}\n          />\n        ))}\n        <input\n          onKeyDown={onKeyDown}\n          className=\"bg-primary-200 w-full outline-none text-2xl\"\n          value={editingValue}\n          onChange={(e) => setEditingValue(e.target.value)}\n        />\n        {displayingSelectableOptions && (\n          <div className=\"absolute min-h-20 bg-primary-200 rounded-lg left-0 right-0 top-full mt-2 overflow-y-scroll\">\n            {displayingSelectableOptions.map((opt) => (\n              <div\n                key={opt}\n                onClick={() => onAddOption(opt)}\n                className=\"cursor-pointer px-2 h-12 whitespace-nowrap overflow-ellipsis horizontal-center hover:bg-primary-700\"\n              >\n                {opt}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","export type Expenditure = {\n  description: string;\n  date: Date;\n  amount: number;\n  labels: string[];\n  id: string;\n};\n\nexport type DB = {\n  expenditures: Expenditure[];\n};\n\nexport const DEFAULT_DB_VALUE: DB = {\n  expenditures: [],\n};\n","import { DB, DEFAULT_DB_VALUE } from \"./types\";\n\nconst LS_STORAGE_KEY = \"ls/expenditure\";\n\nexport const saveData = (data: object) => {\n  localStorage.setItem(LS_STORAGE_KEY, JSON.stringify(data));\n};\n\nexport const getData = <T>(key?: string): T | null => {\n  try {\n    const data: DB =\n      JSON.parse(localStorage.getItem(LS_STORAGE_KEY) || \"\") ||\n      DEFAULT_DB_VALUE;\n    return key\n      ? key.split(\".\").reduce<any>((result, keyPart) => result?.[keyPart], data)\n      : data;\n  } catch {\n    return null;\n  }\n};\n","import React from \"react\";\nimport { getData, saveData } from \"../backend/ls\";\nimport { DB, DEFAULT_DB_VALUE, Expenditure } from \"../backend/types\";\n\nexport type LocalStorageContextType = {\n  store: DB;\n  addExpenditure: (expenditure: Expenditure) => void;\n};\nexport const LocalStorageContext = React.createContext<LocalStorageContextType>(\n  { store: DEFAULT_DB_VALUE, addExpenditure: (_) => {} }\n);\n\ntype Props = {\n  children: React.ReactNode;\n};\nexport default function LocalStorageContextProvider({ children }: Props) {\n  const db: DB = getData() || { expenditures: [] };\n  const [store, setStore] = React.useState<DB>(db);\n\n  React.useEffect(() => {\n    if (store) {\n      saveData(store);\n    }\n  }, [store]);\n  const addExpenditure = (expenditure: Expenditure) => {\n    setStore({\n      ...store,\n      expenditures: [...store.expenditures, expenditure],\n    });\n  };\n\n  const contextValue = {\n    store,\n    addExpenditure,\n  };\n  return (\n    <LocalStorageContext.Provider value={contextValue}>\n      {children}\n    </LocalStorageContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { LocalStorageContext } from \"../contexts/LocalStorageContext\";\n\nexport default function RecordListPage() {\n  const { store } = React.useContext(LocalStorageContext);\n\n  return (\n    <div className=\"vertical\">\n      {store?.expenditures?.map((record) => (\n        <div className=\"items-center grid grid-cols-12 h-16 border-t border-b border-primary-200\">\n          <span className=\"col-span-3\">\n            {format(new Date(record.date), \"yyyy-MM-dd HH:mm\")}\n          </span>\n          <span className=\"col-span-6 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            {record.description}\n          </span>\n          <span className=\"col-span-3 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            {record.amount}â‚¬\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport AmountInput from \"./components/AmountInput\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport SubmitButton from \"./components/SubmitButton\";\nimport MultipleSelect from \"./components/MultipleSelect\";\nimport LocalStorageContextProvider, {\n  LocalStorageContext,\n} from \"./contexts/LocalStorageContext\";\nimport { PageList } from \"./pageList\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport RecordListPage from \"./pages/RecordListPage\";\n\ntype Form = {\n  amount: number;\n  description: string;\n  labels: string[];\n};\n\nconst defaultFormValue: Form = {\n  amount: 0,\n  description: \"\",\n  labels: [],\n};\nfunction App() {\n  const [page, setPage] = React.useState<PageList>(PageList.HOME_PAGE);\n  const { addExpenditure, store } = React.useContext(LocalStorageContext);\n  const [formValue, setFormValue] = React.useState<Form>(defaultFormValue);\n\n  const labelsAddedInStore = store.expenditures.reduce<string[]>(\n    (labels, expenditure) =>\n      Array.from(new Set([...labels, ...expenditure.labels])),\n    []\n  );\n\n  const saveForm = () => {\n    if (formValue.amount <= 0 || !formValue.description) {\n      toast.error(\"missing description or amount is invalid.\");\n      return;\n    }\n    addExpenditure({\n      ...formValue,\n      amount: formValue.amount / 100,\n      date: new Date(),\n      id: `${new Date().getTime()}-${Math.random().toString().split(\".\")[1]}`,\n    });\n    setFormValue(defaultFormValue);\n    toast.success(\"Expenditure logged!\");\n  };\n\n  return (\n    <div className=\"absolute vertical inset-0 flex p-4 bg-primary-500\">\n      <Toaster />\n      <Header currentPage={page} goPage={setPage} />\n      {page === PageList.HOME_PAGE && (\n        <>\n          <AmountInput\n            value={formValue.amount}\n            onChange={(newValue) =>\n              setFormValue({ ...formValue, amount: newValue })\n            }\n          />\n          <Input\n            name=\"description\"\n            label=\"description\"\n            value={formValue.description}\n            onChange={(desc) =>\n              setFormValue({ ...formValue, description: desc })\n            }\n          />\n          <MultipleSelect\n            name=\"labels\"\n            label=\"tags\"\n            values={formValue.labels}\n            onChange={(labels) => setFormValue({ ...formValue, labels })}\n            selectableOptions={labelsAddedInStore}\n          />\n          <div className=\"flex-1\" />\n          <SubmitButton onSubmit={saveForm} />\n        </>\n      )}\n      {page === PageList.RECORD_LIST_PAGE && <RecordListPage />}\n    </div>\n  );\n}\n\nexport default function AppWithContexts() {\n  return (\n    <LocalStorageContextProvider>\n      <App />\n    </LocalStorageContextProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}